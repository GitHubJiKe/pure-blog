{"version":3,"sources":["components/Layout.js","components/SideBar.js","components/Content.js","components/Posts.js","jsons/posts.js","jsons/recentlys.js","App.js","serviceWorker.js","index.js"],"names":["Layout","react_default","a","createElement","id","className","this","props","children","React","PureComponent","NavItem","_ref","label","url","style","marginLeft","marginRight","href","target","SideBar","_this$props","_this$props$brandTitl","brandTitle","_this$props$brandTagl","brandTagline","navs","map","v","idx","SideBar_NavItem","Object","assign","key","Content","Tag","_ref2","class","Post","_ref3","title","description","link","_ref3$author","author","date","_ref3$tags","tags","textDecorationLine","length","paddingLeft","paddingRight","t","Posts_Tag","Posts","posts","recentlys","NAVS","App","Layout_Layout","SideBar_SideBar","components_Content","components_Posts","p","Posts_Post","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4032a2a9.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Layout extends React.PureComponent {\n  render() {\n    return (\n      <div id=\"layout\" className=\"pure-g\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst NavItem = ({ label, url }) => (\n  <li className=\"nav-item\" style={{ marginLeft: 5, marginRight: 5 }}>\n    <a className=\"pure-button\" href={url} target=\"javascript:void(0);\">\n      {label}\n    </a>\n  </li>\n);\n\nexport default class SideBar extends React.PureComponent {\n  render() {\n    const {\n      brandTitle = \"苑朋飞的日志\",\n      brandTagline = \"热爱 & 分享\",\n      navs\n    } = this.props;\n    return (\n      <div className=\"sidebar pure-u-1 pure-u-md-1-4\">\n        <div className=\"header\">\n          <h1 className=\"brand-title\">{brandTitle}</h1>\n          <h2 className=\"brand-tagline\">{brandTagline}</h2>\n\n          <nav className=\"nav\">\n            <ul className=\"nav-list\">\n              {navs.map((v, idx) => (\n                <NavItem {...v} key={idx} />\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Content = ({ children }) => {\n  return <div className=\"content pure-u-1 pure-u-md-3-4\">{children}</div>;\n};\n\nexport default Content;\n","import React from \"react\";\n\nconst Posts = ({ children, title }) => {\n  return (\n    <div className=\"posts\">\n      <h1 className=\"content-subhead\">{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nconst Tag = ({ label }) => (\n  <a class=\"post-category post-category-pure\" href=\"#\">\n    {label}\n  </a>\n);\n\nexport const Post = ({\n  title,\n  description,\n  link,\n  author = \"Peter Yuan\",\n  date,\n  tags = []\n}) => {\n  return (\n    <a className=\"post\" href={link} style={{ textDecorationLine: \"none\" }}>\n      <header className=\"post-header\">\n        <h2 className=\"post-title\">{title}</h2>\n        <p class=\"post-meta\">\n          By\n          <a href=\"#\" class=\"post-author\" style={{ marginLeft: 10 }}>\n            {author}\n          </a>\n          {tags.length > 0 && (\n            <label style={{ paddingLeft: 10, paddingRight: 10 }}>under</label>\n          )}\n          {tags.map((t, idx) => (\n            <Tag label={t} key={idx} />\n          ))}\n        </p>\n      </header>\n      {date && <div className=\"post-description\">{date}</div>}\n      {description && <div className=\"post-description\">{description}</div>}\n    </a>\n  );\n};\n\nexport default Posts;\n","const posts = [{\"title\":\" Pure Blog\",\"author\":\" Peter Yuan\",\"date\":\" 2019-05-27\",\"description\":\" pure blog based on React& Purecss\",\"tags\":[\" react\",\"showdown\",\"purecss\"],\"link\":\"/posts/pure-blog.html\"}]; export default posts;","const recentlys = [{\"title\":\" 纯 の 博客\",\"author\":\" Peter.Yuan\",\"date\":\" 2019-05-27\",\"description\":\" 基于React 和 Purecss 搭建的博客\",\"tags\":[\"  react\",\"showdown\",\"purecss\"],\"link\":\"/recentlys/纯の博客.html\"}]; export default recentlys;","import React from \"react\";\nimport \"./App.css\";\nimport Layout from \"./components/Layout\";\nimport SideBar from \"./components/SideBar\";\nimport Content from \"./components/Content\";\nimport Posts, { Post } from \"./components/Posts\";\nimport posts from \"./jsons/posts.js\";\nimport recentlys from \"./jsons/recentlys.js\";\nconst NAVS = [\n  {\n    label: \"github\",\n    url: \"https://github.com/GitHubJiKe\"\n  },\n  {\n    label: \"知乎\",\n    url: \"https://www.zhihu.com/people/ji-ke-yuan/activities\"\n  }\n];\n\nfunction App() {\n  return (\n    <Layout>\n      <SideBar navs={NAVS} />\n      <Content>\n        {recentlys.length > 0 && (\n          <Posts title=\"最近更新\">\n            {recentlys.map((p, idx) => (\n              <Post key={idx} {...p} />\n            ))}\n          </Posts>\n        )}\n        {posts.length > 0 && (\n          <Posts title=\"全部日志\">\n            {posts.map((p, idx) => (\n              <Post key={idx} {...p} />\n            ))}\n          </Posts>\n        )}\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}